name: Terraform Continuous Integration

on:
  workflow_dispatch:
    inputs:
      terraform_folder:
        description: 'Terraform configuration folder'
        required: true
        type: string
        default: 'none'

permissions:
  id-token: write
  contents: read

jobs:
  terraform-validate:
    name: Validate Terraform
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Path
        run: |
          if [ -d "./${{ github.event.inputs.terraform_folder }}" ]; then
            echo "Path /${{ github.event.inputs.terraform_folder }} exist"
          else
            echo "!!! Path /${{ github.event.inputs.terraform_folder }} does not exist !!!"
            echo "Please use one of the following subfolders as path:"
            ls -l
            exit 1
          fi

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: "1.9.6"

      - name: Terraform Init
        run: |
          terraform \
          -chdir="${{ github.event.inputs.terraform_folder }}" \
          init \
          -backend=false

      - name: Terraform Validate
        run: |
          terraform \
          -chdir="${{ github.event.inputs.terraform_folder }}" \
          validate

  terraform-plan:
    name: Terraform Plan
    needs: terraform-validate
    runs-on:
      self-hosted
    env:
      ARM_CLIENT_ID: ${{ secrets.ID_001_AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ID_001_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      
      - name: Set runner IP on TF backend storage account
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            $resourceGroupName = "${{ vars.TFBACKEND_RESOURCE_GROUP }}"
            $storageAccountName = "${{ vars.TFBACKEND_STORAGE_ACCOUNT }}"
            $currentIP = (Invoke-WebRequest -Uri "https://api.ipify.org?format=json").Content | ConvertFrom-Json
            Add-AzStorageAccountNetworkRule -ResourceGroupName $resourceGroupName -Name $storageAccountName -IPAddressOrRange $currentIP.ip

      - name: Current Working Directory
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            Get-ChildItem

      - name: Download Variables for Terraform
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            $configDirectory = "${{ github.event.inputs.terraform_folder }}"
            $resourceGroupName = "${{ vars.TFBACKEND_RESOURCE_GROUP }}"
            $storageAccountName = "${{ vars.TFBACKEND_STORAGE_ACCOUNT }}"
            $tfvarsContainer = "${{ github.event.inputs.terraform_folder }}"
            
            Set-Location $configDirectory
            $storageAccountObject = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $storageAccountName
            $tfvarsBlob = Get-AzStorageBlob -Context $storageAccountObject.Context -Container $tfvarsContainer | Where-Object {$_.Name -like "*.tfvars"}
            $blobContent = Get-AzStorageBlobContent -Context $storageAccountObject.Context -Container $tfvarsContainer -Blob $tfvarsBlob.Name -Destination $configDirectory
            Write-Output "BLOB CONTENT"
            $blobContent
            #Rename-Item -Path $tfvarsBlob.Name.Split('.')[0] -NewName "$($tfvarsBlob.Name).auto.tfvars" # For unknown reason, when blob is downloaded, the extension is removed
            Write-Output "DIRECTORY CONTENT"
            Get-ChildItem
            Write-Output "DIRECTORY CONTENT"
            Get-ChildItem | Where-Object {$_.Name -like "*.tfvars"}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: "1.9.6"

      - name: Terraform Init
        run: |
          terraform \
          -chdir="${{github.event.inputs.terraform_folder}}" \
          init \
          -backend-config="resource_group_name=${{vars.TFBACKEND_RESOURCE_GROUP}}" \
          -backend-config="storage_account_name=${{vars.TFBACKEND_STORAGE_ACCOUNT}}" \
          -backend-config="container_name=${{ github.event.inputs.terraform_folder }}" \
          -backend-config="key=terraform.tfstate"

      - name: Terraform Plan
        id: plan
        run: |
          terraform \
          -chdir="${{ github.event.inputs.terraform_folder }}" \
          plan \
          -input=false
